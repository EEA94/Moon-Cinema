generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comments {
  id                                Int      @id
  text                              String
  MovieId                           String?  @db.Uuid
  UserId                            String?  @db.Uuid
  Movies_Comments_MovieIdToMovies   Movies?  @relation("Comments_MovieIdToMovies", fields: [MovieId], references: [id])
  Users_Comments_UserIdToUsers      Users?   @relation("Comments_UserIdToUsers", fields: [UserId], references: [id])
  Movies_CommentsToMovies_CommentId Movies[] @relation("CommentsToMovies_CommentId")
  Users_CommentsToUsers_CommentId   Users[]  @relation("CommentsToUsers_CommentId")
}

model Movies {
  id                                  String     @id @default(uuid()) @db.Uuid
  Title                               String     @db.Char(50)
  Plot                                String
  Genre                               String     @db.Char(30)
  Actors                              String     @db.Char(60)
  Language                            String     @db.Char(60)
  Director                            String     @db.Char(60)
  Release                             String     @db.Char(60)
  Poster                              String     @db.VarChar(255)
  Rated                               String     @db.Char(15)
  Trailer                             String     @db.VarChar(255)
  Type                                String     @db.VarChar(255)
  Runtime                             Int
  ShowId                              Int?
  CommentId                           Int?
  Comments_CommentsToMovies_CommentId Comments?  @relation("CommentsToMovies_CommentId", fields: [CommentId], references: [id])
  Shows_Movies_ShowIdToShows          Shows?     @relation("Movies_ShowIdToShows", fields: [ShowId], references: [id])
  Comments_Comments_MovieIdToMovies   Comments[] @relation("Comments_MovieIdToMovies")
  Shows_MoviesToShows_MovieId         Shows[]    @relation("MoviesToShows_MovieId")
}

model Rooms {
  id                              Int       @id
  seats                           Int
  SeatId                          Int?
  TicketId                        Int?
  ShowId                          Int?
  Seats_Rooms_SeatIdToSeats       Seats?    @relation("Rooms_SeatIdToSeats", fields: [SeatId], references: [id])
  Shows_Rooms_ShowIdToShows       Shows?    @relation("Rooms_ShowIdToShows", fields: [ShowId], references: [id])
  Tickets_Rooms_TicketIdToTickets Tickets?  @relation("Rooms_TicketIdToTickets", fields: [TicketId], references: [id])
  Seats_RoomsToSeats_RoomId       Seats[]   @relation("RoomsToSeats_RoomId")
  Shows_RoomsToShows_RoomId       Shows[]   @relation("RoomsToShows_RoomId")
  Tickets_RoomsToTickets_RoomId   Tickets[] @relation("RoomsToTickets_RoomId")
}

model Sales {
  id                              Int       @id
  TicketId                        Int?
  UserId                          String?   @db.Uuid
  Tickets_Sales_TicketIdToTickets Tickets?  @relation("Sales_TicketIdToTickets", fields: [TicketId], references: [id])
  Users_Sales_UserIdToUsers       Users?    @relation("Sales_UserIdToUsers", fields: [UserId], references: [id])
  Tickets_SalesToTickets_SaleId   Tickets[] @relation("SalesToTickets_SaleId")
  Users_SalesToUsers_SaleId       Users[]   @relation("SalesToUsers_SaleId")
}

model Seats {
  id                              Int       @id
  RoomId                          Int?
  TicketId                        Int?
  Rooms_RoomsToSeats_RoomId       Rooms?    @relation("RoomsToSeats_RoomId", fields: [RoomId], references: [id])
  Tickets_Seats_TicketIdToTickets Tickets?  @relation("Seats_TicketIdToTickets", fields: [TicketId], references: [id])
  Rooms_Rooms_SeatIdToSeats       Rooms[]   @relation("Rooms_SeatIdToSeats")
  Tickets_SeatsToTickets_SeatId   Tickets[] @relation("SeatsToTickets_SeatId")
}

model Shows {
  id                              Int       @id
  RoomId                          Int?
  MovieId                         String?   @db.Uuid
  TicketId                        Int?
  Movies_MoviesToShows_MovieId    Movies?   @relation("MoviesToShows_MovieId", fields: [MovieId], references: [id])
  Rooms_RoomsToShows_RoomId       Rooms?    @relation("RoomsToShows_RoomId", fields: [RoomId], references: [id])
  Tickets_Shows_TicketIdToTickets Tickets?  @relation("Shows_TicketIdToTickets", fields: [TicketId], references: [id])
  Movies_Movies_ShowIdToShows     Movies[]  @relation("Movies_ShowIdToShows")
  Rooms_Rooms_ShowIdToShows       Rooms[]   @relation("Rooms_ShowIdToShows")
  Tickets_ShowsToTickets_ShowId   Tickets[] @relation("ShowsToTickets_ShowId")
}

model Tickets {
  id                            Int     @id
  SeatId                        Int?
  RoomId                        Int?
  SaleId                        Int?
  ShowId                        Int?
  Rooms_RoomsToTickets_RoomId   Rooms?  @relation("RoomsToTickets_RoomId", fields: [RoomId], references: [id])
  Sales_SalesToTickets_SaleId   Sales?  @relation("SalesToTickets_SaleId", fields: [SaleId], references: [id])
  Seats_SeatsToTickets_SeatId   Seats?  @relation("SeatsToTickets_SeatId", fields: [SeatId], references: [id])
  Shows_ShowsToTickets_ShowId   Shows?  @relation("ShowsToTickets_ShowId", fields: [ShowId], references: [id])
  Rooms_Rooms_TicketIdToTickets Rooms[] @relation("Rooms_TicketIdToTickets")
  Sales_Sales_TicketIdToTickets Sales[] @relation("Sales_TicketIdToTickets")
  Seats_Seats_TicketIdToTickets Seats[] @relation("Seats_TicketIdToTickets")
  Shows_Shows_TicketIdToTickets Shows[] @relation("Shows_TicketIdToTickets")
}

model Users {
  id                                 String     @id @db.Uuid
  username                           String     @db.Char(20)
  password                           String     @db.Char(20)
  role                               Int
  SaleId                             Int?
  CommentId                          Int?
  Comments_CommentsToUsers_CommentId Comments?  @relation("CommentsToUsers_CommentId", fields: [CommentId], references: [id])
  Sales_SalesToUsers_SaleId          Sales?     @relation("SalesToUsers_SaleId", fields: [SaleId], references: [id])
  Comments_Comments_UserIdToUsers    Comments[] @relation("Comments_UserIdToUsers")
  Sales_Sales_UserIdToUsers          Sales[]    @relation("Sales_UserIdToUsers")
}
